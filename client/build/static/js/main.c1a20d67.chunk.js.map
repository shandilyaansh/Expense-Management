{"version":3,"sources":["components/Layout/Header.js","components/Layout/Footer.js","components/Layout/Layout.js","components/Spinner.js","components/Analytics.js","pages/HomePage.js","pages/Login.js","pages/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Header","_useState","useState","_useState2","_slicedToArray","loginUser","setLoginUser","navigate","useNavigate","useEffect","user","JSON","parse","localStorage","getItem","React","createElement","Fragment","className","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Link","to","name","onClick","removeItem","message","success","Footer","Layout","_ref","children","Spinner","role","Analytics","allTransection","categories","totalTransection","length","totalIncomeTransection","filter","transection","totalExpenseTransection","totalIncomePercent","totalExpensePercent","totalTurnover","reduce","acc","amount","totalIncomeTurnover","totalExpenseTurnover","totalIncomeTurnoverPercent","totalExpenseTurnoverPercent","Progress","strokeColor","percent","toFixed","map","category","i","key","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","RangePicker","DatePicker","HomePage","showModal","setShowModal","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setAllTransection","_useState7","_useState8","frequency","setFrequency","_useState9","_useState10","selectedDate","setSelectedDate","_useState11","_useState12","setType","_useState13","_useState14","viewData","setViewData","_useState15","_useState16","editable","setEditable","columns","title","dataIndex","render","text","moment","format","EditOutlined","DeleteOutlined","handleDelete","_asyncToGenerator","_callee","res","_context","axios","post","userid","_id","data","t0","console","log","apply","arguments","getAllTransection","_ref2","_callee2","_context2","transectionId","_x","handleSubmit","_ref3","_callee3","_context3","payload","_objectSpread","_x2","Select","onChange","Option","UnorderedListOutlined","concat","AreaChartOutlined","Table","dataSource","Modal","open","onCancel","footer","Form","layout","onFinish","initialValues","Item","label","Input","Login","submitHandler","_yield$axios$post","setItem","stringify","password","required","Register","ProctectedRoutes","props","Navigate","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.c1a20d67.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { message } from 'antd';\r\n\r\n\r\nconst Header = () => {\r\n\r\n\r\n    const [loginUser, setLoginUser] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const user = JSON.parse(localStorage.getItem('users'))\r\n        if (user) {\r\n            setLoginUser(user)\r\n        }\r\n    }, [])\r\n\r\n    //  Logout handler\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem(\"users\");\r\n        message.success(\"Logout Successfully\")\r\n        navigate(\"/login\")\r\n    }\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n                <div className=\"container-fluid\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                        <Link to='/' className=\"navbar-brand\">Expense Management</Link>\r\n                        <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                {\" \"}\r\n                                <p className=\"nav-link\" >👷‍♂️ {loginUser && (loginUser.name)}</p>\r\n                                {\" \"}\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-dark\" onClick={logoutHandler}>Logout</button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='bg-dark text-light p-4'>\r\n        <h6 className='text-center'>All rights reserved &copy; Anshu Kumar</h6>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className='content'>\r\n                {children}\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout","import { Layout } from 'antd'\r\nimport React from 'react'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <Layout>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React from 'react'\r\nimport { Progress } from 'antd'\r\nconst Analytics = ({ allTransection }) => {\r\n    // Categories\r\n    const categories = ['salary', 'interest', 'bonus', 'pension', 'movie', 'travel', 'bills', 'medical', 'tax', 'other']\r\n\r\n    // Total Transactions \r\n    const totalTransection = allTransection.length\r\n    const totalIncomeTransection = allTransection.filter(transection => transection.type === 'income');\r\n    const totalExpenseTransection = allTransection.filter(transection => transection.type === 'expense');\r\n    const totalIncomePercent = (totalIncomeTransection.length / totalTransection) * 100;\r\n    const totalExpensePercent = (totalExpenseTransection.length / totalTransection) * 100;\r\n\r\n    // Total TurnOver\r\n    const totalTurnover = allTransection.reduce((acc, transection) => acc + transection.amount, 0);\r\n    const totalIncomeTurnover = allTransection.filter((transection => transection.type === 'income')).reduce((acc, transection) => acc + transection.amount, 0);\r\n    const totalExpenseTurnover = allTransection.filter((transection => transection.type === 'expense')).reduce((acc, transection) => acc + transection.amount, 0);\r\n\r\n    const totalIncomeTurnoverPercent = (totalIncomeTurnover / totalTurnover) * 100;\r\n    const totalExpenseTurnoverPercent = (totalExpenseTurnover / totalTurnover) * 100;\r\n    return (\r\n        <>\r\n            <div className='row m-3'>\r\n                <div className='col-md-3'>\r\n                    <div className='card'>\r\n                        <div className='card-header'>\r\n                            Total Transections : <span>{totalTransection}</span>\r\n                        </div>\r\n                        <div className='card-body d-flex flex-column justify-content-center'>\r\n                            <h5 className='text-success'>Income : {totalIncomeTransection.length}</h5>\r\n                            <h5 className='text-danger'>Expense : {totalExpenseTransection.length}</h5>\r\n                            <div className='d-flex flex-column justify-content-center'>\r\n                                <Progress type='circle'\r\n                                    strokeColor={'green'}\r\n                                    className='mx-2 mt-2'\r\n                                    percent={totalIncomePercent.toFixed(2)}\r\n                                />\r\n                                <Progress type='circle'\r\n                                    strokeColor={'red'}\r\n                                    className='mx-2 mt-2'\r\n                                    percent={totalExpensePercent.toFixed(2)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-3'>\r\n                    <div className='card'>\r\n                        <div className='card-header'>\r\n                            Total TurnOver : <span>{totalTurnover}₹</span>\r\n                        </div>\r\n                        <div className='card-body d-flex flex-column justify-content-center'>\r\n                            <h5 className='text-success'>Income : {totalIncomeTurnover}</h5>\r\n                            <h5 className='text-danger'>Expense : {totalExpenseTurnover}</h5>\r\n                            <div className='d-flex flex-column justify-content-center'>\r\n                                <Progress type='circle'\r\n                                    strokeColor={'green'}\r\n                                    className='mx-2 mt-2'\r\n                                    percent={totalIncomeTurnoverPercent.toFixed(2)}\r\n                                />\r\n                                <Progress type='circle'\r\n                                    strokeColor={'red'}\r\n                                    className='mx-2 mt-2'\r\n                                    percent={totalExpenseTurnoverPercent.toFixed(2)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-3'>\r\n                    <h4>Categorywise Income</h4>\r\n                    {\r\n                        categories.map((category, i) => {\r\n                            const amount = allTransection.filter(\r\n                                transection => (transection.type === 'income')\r\n                                    && transection.category === category)\r\n                                .reduce((acc, transection) => acc + transection.amount, 0);\r\n                            return (\r\n                                amount > 0 && (\r\n                                    <div className='card' key={i}>\r\n                                        <div className='card-body' key={i}>\r\n                                            <h5 key={i}>{category}</h5>\r\n                                            <Progress\r\n                                                percent={((amount / totalIncomeTurnover) * 100).toFixed(0)}\r\n                                                key={i}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className='col-md-3'>\r\n                    <h4>Categorywise Expense</h4>\r\n                    {\r\n                        categories.map((category, i) => {\r\n                            const amount = allTransection.filter(\r\n                                transection => (transection.type === 'expense')\r\n                                    && transection.category === category)\r\n                                .reduce((acc, transection) => acc + transection.amount, 0);\r\n                            return (\r\n                                amount > 0 && (\r\n                                    <div className='card' key={i}>\r\n                                        <div className='card-body' key={i}>\r\n                                            <h5 key={i}>{category}</h5>\r\n                                            <Progress\r\n                                                percent={((amount / totalExpenseTurnover) * 100).toFixed(0)}\r\n                                                key={i}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Analytics","import React, { useState, useEffect } from 'react'\r\nimport Layout from '../components/Layout/Layout'\r\nimport { Modal, Form, Input, Select, message, Table, DatePicker } from 'antd'\r\nimport axios from 'axios'\r\nimport { UnorderedListOutlined, AreaChartOutlined, EditOutlined, DeleteOutlined } from \"@ant-design/icons\"\r\nimport Spinner from '../components/Spinner'\r\nimport moment from 'moment'\r\nimport Analytics from '../components/Analytics'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nconst HomePage = () => {\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [allTransection, setAllTransection] = useState([])\r\n    const [frequency, setFrequency] = useState('365')\r\n    const [selectedDate, setSelectedDate] = useState([])\r\n    const [type, setType] = useState('all');\r\n    const [viewData, setViewData] = useState('analytics')\r\n    const [editable, setEditable] = useState(null);\r\n\r\n    const navigate=useNavigate()\r\n    // Tabels\r\n    const columns = [\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            render: (text) => <span>{moment(text).format('YYYY-MM-DD')}</span>\r\n        },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount'\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category'\r\n        },\r\n        {\r\n            title: 'Reference',\r\n            dataIndex: 'reference'\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description'\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (text, record) => (\r\n                <div className='mx-2'>\r\n                    <EditOutlined onClick={() => {\r\n                        setEditable(record)\r\n                        setShowModal(true)\r\n                    }} />\r\n                    <DeleteOutlined className='mx-2' onClick={() => handleDelete(record)} />\r\n                </div>\r\n            )\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    // getAll transection\r\n\r\n    // Use Hook\r\n    useEffect(() => {\r\n        const getAllTransection = async () => {\r\n            try {\r\n                const user = JSON.parse(localStorage.getItem('users'));\r\n                setLoading(true);\r\n                const res = await axios.post('/api/v1/transections/get-transection',\r\n                    { userid: user._id, frequency, selectedDate, type })\r\n                setLoading(false);\r\n                setAllTransection(res.data)\r\n                // console.log(res.data);\r\n            } catch (error) {\r\n                setLoading(false)\r\n                console.log(error);\r\n                message.error('Fetching issue with transection')\r\n            }\r\n        };\r\n        getAllTransection()\r\n    }, [frequency, selectedDate, type])\r\n\r\n    // Deleting handler\r\n    const handleDelete = async (record) => {\r\n        try {\r\n            setLoading(true)\r\n            await axios.post('/api/v1/transections/delete-transection', { transectionId: record._id })\r\n            setLoading(false);\r\n            message.success('Transaction deleted');\r\n            navigate('/login')\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n            message.error('Unable to delete');\r\n        }\r\n    }\r\n\r\n    // form Handling\r\n    const handleSubmit = async (values) => {\r\n        // console.log(values);\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('users'))\r\n            setLoading(true);\r\n            if (editable) {\r\n                await axios.post('/api/v1/transections/edit-transection', {\r\n                    payload: {\r\n                        ...values,\r\n                        userid: user._id,\r\n                    },\r\n                    transectionId: editable._id\r\n                })\r\n                setLoading(false);\r\n                message.success('Transection Updated Successfully')\r\n                navigate('/login')\r\n            }\r\n            else {\r\n                await axios.post('/api/v1/transections/add-transection', { ...values, userid: user._id })\r\n                setLoading(false);\r\n                message.success('Transection Added Successfully')\r\n                navigate('/login');\r\n            }\r\n            setShowModal(false)\r\n            setShowModal(null)\r\n        } catch (error) {\r\n            setLoading(false);\r\n            message.error(\"Failed to add transections\")\r\n            console.log(error);\r\n        }\r\n    }\r\n    return (\r\n        <Layout>\r\n            {loading && <Spinner />}\r\n            <div className='filters'>\r\n                <div>\r\n                    <h6>Frequency</h6>\r\n                    <Select value={frequency} onChange={(values) => setFrequency(values)}>\r\n                        <Select.Option value=\"7\">Last 1 Week</Select.Option>\r\n                        <Select.Option value=\"30\">Last 1 Month</Select.Option>\r\n                        <Select.Option value=\"365\">Last 1 Year</Select.Option>\r\n                        <Select.Option value=\"custom\">Custom</Select.Option>\r\n                    </Select>\r\n                    {frequency === \"custom\" && (\r\n                        <RangePicker\r\n                            value={selectedDate}\r\n                            onChange={(values) => setSelectedDate(values)}\r\n                        />)}\r\n                </div>\r\n                <div>\r\n                    <h6>Select Type</h6>\r\n                    <Select value={type} onChange={(values) => setType(values)}>\r\n                        <Select.Option value=\"all\">All</Select.Option>\r\n                        <Select.Option value=\"income\">Income</Select.Option>\r\n                        <Select.Option value=\"expense\">Expense</Select.Option>\r\n                    </Select>\r\n                    {frequency === \"custom\" && (\r\n                        <RangePicker\r\n                            value={selectedDate}\r\n                            onChange={(values) => setSelectedDate(values)}\r\n                        />)}\r\n                </div>\r\n                <div className='switch-icon'>\r\n                    <UnorderedListOutlined className={`mx-2 ${viewData === 'table' ? 'active-icon' : 'inactive-icon'}`}\r\n                        onClick={() => setViewData('table')}\r\n                    />\r\n                    <AreaChartOutlined className={`mx-2 ${viewData === 'analytics' ? 'active-icon' : 'inactive-icon'}`}\r\n                        onClick={() => setViewData('analytics')}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button className='btn btn-primary' onClick={() => setShowModal(true)}>Add new</button>\r\n                </div>\r\n            </div>\r\n            <div className='content'>\r\n                {viewData === 'table' ? (<Table columns={columns} dataSource={allTransection} />)\r\n                    : (<Analytics allTransection={allTransection} />)\r\n                }\r\n            </div>\r\n            <Modal title={editable ? 'Edit Transaction' : 'Add Transections'}\r\n                open={showModal}\r\n                onCancel={() => setShowModal(false)}\r\n                footer={false}\r\n            >\r\n                <Form layout='vertical' onFinish={handleSubmit} initialValues={editable} >\r\n                    <Form.Item label=\"Amount\" name=\"amount\">\r\n                        <Input type='text' />\r\n                    </Form.Item>\r\n                    <Form.Item label='Type' name=\"type\">\r\n                        <Select>\r\n                            <Select.Option value=\"income\">Income</Select.Option>\r\n                            <Select.Option value=\"profit\">Profit</Select.Option>\r\n                            <Select.Option value=\"expense\">Expense</Select.Option>\r\n                            <Select.Option value=\"borrow\">Borrow</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label='Category' name=\"category\">\r\n                        <Select>\r\n                            <Select.Option value=\"salary\">Salary</Select.Option>\r\n                            <Select.Option value=\"interest\">Interest</Select.Option>\r\n                            <Select.Option value=\"bonus\">Bonus</Select.Option>\r\n                            <Select.Option value=\"pension\">Pension</Select.Option>\r\n                            <Select.Option value=\"movie\">Movie</Select.Option>\r\n                            <Select.Option value=\"travel\">Travel</Select.Option>\r\n                            <Select.Option value=\"bills\">Bill Payments</Select.Option>\r\n                            <Select.Option value=\"medical\">Medical</Select.Option>\r\n                            <Select.Option value=\"tax\">Tax</Select.Option>\r\n                            <Select.Option value=\"other\">Others</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Date\" name=\"date\">\r\n                        <Input type='date' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Reference\" name=\"reference\">\r\n                        <Input type='text' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"description\" name=\"description\" >\r\n                        <Input type='text' />\r\n                    </Form.Item>\r\n                    <div className='d-flex justify-content-end'>\r\n                        <button type='submit' className='btn btn-primary'>Save</button>\r\n                    </div>\r\n                </Form>\r\n            </Modal>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React, { useState, useEffect } from 'react'\r\n// import Layout from '../components/Layout/Layout'\r\nimport { Form, Input, message } from 'antd'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Spinner from '../components/Spinner'\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate()\r\n    //  Prevent from login User\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"users\")) {\r\n            navigate(\"/\");\r\n        }\r\n    }, [navigate])\r\n\r\n    const submitHandler = async (values) => {\r\n        try {\r\n            setLoading(true);\r\n            const { data } = await axios.post('/api/v1/users/login', values);\r\n            setLoading(false);\r\n            message.success('Login Successfully');\r\n            localStorage.setItem('users', JSON.stringify({ ...data.user, password: '' }))\r\n            navigate('/');\r\n        } catch (error) {\r\n            setLoading(false);\r\n            message.error(\"Something went wrong\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container'>\r\n                <div className='register-form'>\r\n                <div className='heading'>Expense-Management App</div>\r\n                    {loading && <Spinner />}\r\n                    <Form layout='vertical' onFinish={submitHandler}>\r\n                        <h1>Login Form</h1>\r\n                        <Form.Item label=\"Email\" name='email'>\r\n                            <Input type='email' required />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Password\" name='password'>\r\n                            <Input type='password' required />\r\n                        </Form.Item>\r\n                        <div className='d-flex'>\r\n                            <Link to='/register'>Register</Link>\r\n                            <button className='btn btn-primary'>Login</button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useState, useEffect } from 'react'\r\n// import Layout from '../components/Layout/Layout'\r\nimport { Form, Input, message } from 'antd'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Spinner from '../components/Spinner'\r\n\r\nconst Register = () => {\r\n    // navigate\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    // Form submit\r\n    const submitHandler = async (values) => {\r\n        try {\r\n            setLoading(true);\r\n            await axios.post('/api/v1/users/register', values)\r\n            message.success('Registration Successful');\r\n            setLoading(false)\r\n            navigate('/login')\r\n        } catch (error) {\r\n            setLoading(false);\r\n            message.error('Something went wrong')\r\n            console.log(error);\r\n        }\r\n    }\r\n    // Prevent from Login User\r\n    useEffect(() => {\r\n        if (localStorage.getItem('users')) navigate('/')\r\n    }, [navigate])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container'>\r\n                <div className='register-form'>\r\n                    <div className='heading'>Expense-Management App</div>\r\n                    {loading && <Spinner />}\r\n                    <Form layout='vertical' onFinish={submitHandler}>\r\n                        <h1>Register Form</h1>\r\n                        <Form.Item label=\"Name\" name={\"name\"}>\r\n                            <Input type='text' required />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Email\" name={\"email\"}>\r\n                            <Input type='email' required />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Password\" name={\"password\"}>\r\n                            <Input type='password' required />\r\n                        </Form.Item>\r\n                        <div className='d-flex'>\r\n                            <Link to='/login'>Login</Link>\r\n                            <button className='btn btn-primary'>Register</button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register","import { Navigate, Route, Routes } from 'react-router-dom'\nimport HomePage from './pages/HomePage';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path='/' element={<ProctectedRoutes>\n        <HomePage />\n      </ProctectedRoutes>} />\n      <Route path='/login' element={<Login />} />\n      <Route path='/register' element={<Register />} />\n      <Route path='/' element={<HomePage />} />\n    </Routes>\n  );\n}\nexport function ProctectedRoutes(props) {\n  if (localStorage.getItem('users')) return props.children\n  else return <Navigate to='/login' />\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n// import 'antd/dist/antd.min.css'\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}